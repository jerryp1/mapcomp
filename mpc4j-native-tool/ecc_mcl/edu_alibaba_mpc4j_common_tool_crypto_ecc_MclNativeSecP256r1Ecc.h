/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class edu_alibaba_mpc4j_common_tool_crypto_ecc_MclNativeSecP256r1Ecc */

#ifndef _Included_edu_alibaba_mpc4j_common_tool_crypto_ecc_MclNativeSecP256r1Ecc
#define _Included_edu_alibaba_mpc4j_common_tool_crypto_ecc_MclNativeSecP256r1Ecc
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     edu_alibaba_mpc4j_common_tool_crypto_ecc_MclNativeSecP256r1Ecc
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_edu_alibaba_mpc4j_common_tool_crypto_ecc_MclNativeSecP256r1Ecc_init
  (JNIEnv *, jobject);

/*
 * Class:     edu_alibaba_mpc4j_common_tool_crypto_ecc_MclNativeSecP256r1Ecc
 * Method:    precompute
 * Signature: (Ljava/lang/String;)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_edu_alibaba_mpc4j_common_tool_crypto_ecc_MclNativeSecP256r1Ecc_precompute
  (JNIEnv *, jobject, jstring);

/*
 * Class:     edu_alibaba_mpc4j_common_tool_crypto_ecc_MclNativeSecP256r1Ecc
 * Method:    destroyPrecompute
 * Signature: (Ljava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_edu_alibaba_mpc4j_common_tool_crypto_ecc_MclNativeSecP256r1Ecc_destroyPrecompute
  (JNIEnv *, jobject, jobject);

/*
 * Class:     edu_alibaba_mpc4j_common_tool_crypto_ecc_MclNativeSecP256r1Ecc
 * Method:    singleFixedPointMultiply
 * Signature: (Ljava/nio/ByteBuffer;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_edu_alibaba_mpc4j_common_tool_crypto_ecc_MclNativeSecP256r1Ecc_singleFixedPointMultiply
  (JNIEnv *, jobject, jobject, jstring);

/*
 * Class:     edu_alibaba_mpc4j_common_tool_crypto_ecc_MclNativeSecP256r1Ecc
 * Method:    fixedPointMultiply
 * Signature: (Ljava/nio/ByteBuffer;[Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_edu_alibaba_mpc4j_common_tool_crypto_ecc_MclNativeSecP256r1Ecc_fixedPointMultiply
  (JNIEnv *, jobject, jobject, jobjectArray);

/*
 * Class:     edu_alibaba_mpc4j_common_tool_crypto_ecc_MclNativeSecP256r1Ecc
 * Method:    singleMultiply
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_edu_alibaba_mpc4j_common_tool_crypto_ecc_MclNativeSecP256r1Ecc_singleMultiply
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     edu_alibaba_mpc4j_common_tool_crypto_ecc_MclNativeSecP256r1Ecc
 * Method:    multiply
 * Signature: (Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_edu_alibaba_mpc4j_common_tool_crypto_ecc_MclNativeSecP256r1Ecc_multiply
  (JNIEnv *, jobject, jstring, jobjectArray);

#ifdef __cplusplus
}
#endif
#endif
